apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: car-booking
  namespace: argocd
  labels:
    app.kubernetes.io/name: car-booking-project
    app.kubernetes.io/part-of: argocd
spec:
  description: "Car Booking System - Portfolio Project"

  # Source repositories
  sourceRepos:
    - 'https://github.com/forevertux/car-booking.git'
    - 'https://github.com/forevertux/*'

  # Destinations
  destinations:
    - namespace: 'car-booking*'
      server: 'https://kubernetes.default.svc'
    - namespace: 'argocd'
      server: 'https://kubernetes.default.svc'
    - namespace: 'monitoring'
      server: 'https://kubernetes.default.svc'

  # Cluster resource whitelist
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding
    - group: 'apiextensions.k8s.io'
      kind: CustomResourceDefinition
    - group: 'networking.k8s.io'
      kind: IngressClass

  # Namespace resource whitelist
  namespaceResourceWhitelist:
    - group: ''
      kind: ConfigMap
    - group: ''
      kind: Secret
    - group: ''
      kind: Service
    - group: ''
      kind: ServiceAccount
    - group: 'apps'
      kind: Deployment
    - group: 'apps'
      kind: StatefulSet
    - group: 'networking.k8s.io'
      kind: Ingress
    - group: 'networking.k8s.io'
      kind: NetworkPolicy
    - group: 'policy'
      kind: PodDisruptionBudget
    - group: 'autoscaling'
      kind: HorizontalPodAutoscaler
    - group: 'batch'
      kind: Job
    - group: 'batch'
      kind: CronJob

  # RBAC roles
  roles:
    - name: developer
      description: "Developer access to car-booking project"
      policies:
        - p, proj:car-booking:developer, applications, get, car-booking/*, allow
        - p, proj:car-booking:developer, applications, sync, car-booking/*, allow
        - p, proj:car-booking:developer, applications, action/*, car-booking/*, allow
        - p, proj:car-booking:developer, repositories, get, *, allow
      groups:
        - 'car-booking:developers'

    - name: admin
      description: "Admin access to car-booking project"
      policies:
        - p, proj:car-booking:admin, applications, *, car-booking/*, allow
        - p, proj:car-booking:admin, repositories, *, *, allow
        - p, proj:car-booking:admin, certificates, *, *, allow
      groups:
        - 'car-booking:admins'

  # Sync windows
  syncWindows:
    - kind: allow
      schedule: "* * * * *"
      duration: 24h
      applications:
        - "*"
      manualSync: true
    - kind: deny
      schedule: "0 2 * * *"
      duration: 1h
      applications:
        - "car-booking-prod"
      manualSync: false

  # Signature keys (for signed commits)
  signatureKeys:
    - keyID: ""

  # Orphaned resources
  orphanedResources:
    warn: true
    ignore:
      - group: ''
        kind: Secret
        name: '*-token-*'